@page "/singleproductdetail/{SinglproductId}"
@using Estore.Shared.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@attribute [Authorize]
    <AuthorizeView Roles="Buyer">
        <section class="hero-slider">
            <!-- Single Slider -->
            <div class="single-slider">
                <div class="container">
                    <div class="row no-gutters">
                        <div class="col-lg-9 offset-lg-3 col-12">
                            <div class="text-inner">
                                <div class="row">
                                    <div class="col-lg-7 col-12">
                                        <div class="hero-text">
                                            <h1><span>Welcome To   </span>Estore</h1>
                                            <p>Pakistan's best online shopping store with 1+ million  <br>  products at resounding discounts  with cash on delivery (COD).</p>
                                            <div class="button">
                                                <a href="/shopview" class="btn">Shop Now!</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--/ End Single Slider -->
        </section>
    </AuthorizeView>
<div class="card">
    <div class="card-header"><h2>Single Product </h2></div>
    <div class="card-body">
        <div class="container-fliud">
            <div class="wrapper row">
                <div class="preview col-md-6">

                    <div class="preview-pic tab-content">
                        <div class="tab-pane active" id="pic-1">
                            <img class="product-image"
                                 src="@Product.Image" />
                        </div>
                    </div>

                </div>
                <div class="details col-md-6">
                    <h3 class="product-title">@Product.Name</h3>

                    <p class="product-description">@Product.Description</p>
                    <h4 class="price">current price: <span>Pkr @Product.Price</span></h4>

                    <h5>
                        Stock: <span class="vote">@Product.Stock </span>
                    </h5>
                    <h5 class="sizes">
                        Shop:
                        <span class="size" data-toggle="tooltip" title="small">@getshop(Product.ShopID)</span>

                    </h5>
                    <h5 class="colors">
                        Catagories:

                        @if (abcListarray == null)
                        {
                            <p>Catagory Not found</p>
                        }
                        else

                        {
                            @foreach (string singleCatagory in abcListarray)
                            {

                                <span class="badge badge-secondary">@getcatagories(singleCatagory)</span>
                            }
                        }
                    </h5>
                    <AuthorizeView Roles="Admin,Seller">
                        <button @onclick="@cancel" class="btn w-50 btn btn-default">Cancel</button>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    </div>

</div>

@functions {
    [Parameter]
    public string SinglproductId { get; set; }
    Product Product = new Product();
    String[] abcListarray = null;

    Estore.Shared.Models.Shop[] ShopList;
    Estore.Shared.Models.Catagory[] CatagoriesList;

    protected override async Task OnInitializedAsync()
    {
        Product = await Http.GetFromJsonAsync<Product>
("/api/Products/Details/" + Convert.ToInt32(SinglproductId));
        abcListarray = Product.CatagoryID.Split(",");

        CatagoriesList = await Http.GetFromJsonAsync<Estore.Shared.Models.Catagory[]>
("api/Catagories/Index");
        ShopList = await Http.GetFromJsonAsync<Estore.Shared.Models.Shop[]>
("api/Shops/Index");


    }
    public String getcatagories(string id)
    {
        try
        {
            Catagory Catagory = CatagoriesList.FirstOrDefault(t => t.Id == Convert.ToInt32(id));
            return Catagory.Name;
        }
        catch
        {
            return "errr";
        }



    }
    public String getshop(int id)
    {
        try
        {
            Shop Shop = ShopList.FirstOrDefault(t => t.Id == id);
            return Shop.Name;
        }
        catch
        {
            return "errr";
        }



    }


    void cancel()
    {
        UriHelper.NavigateTo("/productslist");
    }

}





<style>

    /*****************globals*************/
    body {
        font-family: 'open sans';
        overflow-x: hidden;
    }

    img {
        max-width: 100%;
    }

    .preview {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    @@media screen and (max-width: 996px) {
        .preview {
            margin-bottom: 20px;
        }
    }

    .preview-pic {
        -webkit-box-flex: 1;
        -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
        flex-grow: 1;
    }

    .preview-thumbnail.nav-tabs {
        border: none;
        margin-top: 15px;
    }

        .preview-thumbnail.nav-tabs li {
            width: 18%;
            margin-right: 2.5%;
        }

            .preview-thumbnail.nav-tabs li img {
                max-width: 100%;
                display: block;
            }

            .preview-thumbnail.nav-tabs li a {
                padding: 0;
                margin: 0;
            }

            .preview-thumbnail.nav-tabs li:last-of-type {
                margin-right: 0;
            }

    .tab-content {
        overflow: hidden;
    }

        .tab-content img {
            width: 100%;
            -webkit-animation-name: opacity;
            animation-name: opacity;
            -webkit-animation-duration: .3s;
            animation-duration: .3s;
        }



    @@media screen and (min-width: 997px) {
        .wrapper {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
        }
    }

    .details {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    .badge {
        padding: 0.35em 0.5em;
        margin: 5px 2px;
    }

    .product-image {
        box-shadow: 0 3px 6px rgb(0 0 0 / 16%), 0 3px 6px rgb(0 0 0 / 23%);
        width: 93%;
        border-radius: 10px;
    }

    .colors {
        -webkit-box-flex: 1;
        -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
        flex-grow: 1;
    }

    .product-title, .price, .sizes, .colors {
        text-transform: UPPERCASE;
        font-weight: bold;
    }

        .checked, .price span {
            color: #ff9f1a;
        }

    .product-title, .rating, .product-description, .price, .vote, .sizes {
        margin-bottom: 15px;
    }

    .product-title {
        margin-top: 0;
    }

    .size {
        margin-right: 10px;
    }

        .size:first-of-type {
            margin-left: 40px;
        }

    .color {
        display: inline-block;
        vertical-align: middle;
        margin-right: 10px;
        height: 2em;
        width: 2em;
        border-radius: 2px;
    }

        .color:first-of-type {
            margin-left: 20px;
        }

    .add-to-cart, .like {
        background: #ff9f1a;
        padding: 1.2em 1.5em;
        border: none;
        text-transform: UPPERCASE;
        font-weight: bold;
        color: #fff;
        -webkit-transition: background .3s ease;
        transition: background .3s ease;
    }

        .add-to-cart:hover, .like:hover {
            background: #b36800;
            color: #fff;
        }

    .not-available {
        text-align: center;
        line-height: 2em;
    }

        .not-available:before {
            font-family: fontawesome;
            content: "\f00d";
            color: #fff;
        }

    .orange {
        background: #ff9f1a;
    }

    .green {
        background: #85ad00;
    }

    .blue {
        background: #0076ad;
    }

    .tooltip-inner {
        padding: 1.3em;
    }

    @@-webkit-keyframes opacity {
        0% {
            opacity: 0;
            -webkit-transform: scale(3);
            transform: scale(3);
        }

        100% {
            opacity: 1;
            -webkit-transform: scale(1);
            transform: scale(1);
        }
    }

    @@keyframes opacity {
        0% {
            opacity: 0;
            -webkit-transform: scale(3);
            transform: scale(3);
        }

        100% {
            opacity: 1;
            -webkit-transform: scale(1);
            transform: scale(1);
        }
    }

    /*# sourceMappingURL=style.css.map */
</style>