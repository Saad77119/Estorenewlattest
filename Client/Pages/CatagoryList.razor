@page "/CatagoryList"
@using Estore.Client.Services
@using Estore.Shared.Models
@using System.Threading.Tasks
@using System.Linq;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject CustomStateProvider authStateProvider
@attribute [Authorize]
<AuthorizeView Roles="Admin">
    <div class="card">
        <div class="card-header">
            <h1>Catagories</h1>
        </div>
        <div class="card-body">
            <div class="col-md-12">

                <a class="btn btn-primary alignright m-2" href="/addcatagory">+ Add New Catagories</a>

            </div>
            @if (CatagoriesList == null)
            {
                <p>No Catagory</p>
            }
            else
            {
                <table class='table  table-striped table-responsive-md'>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th colspan="2">Discription</th>
                            <th> Action</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var Catagory in CatagoriesList)
                        {

                            <tr>
                                <td>@i</td>
                                <td>@Catagory.Name</td>

                                <td colspan="2">@Catagory.Discription</td>

                                <td>
                                    <a class="btn btn-info" href='/editcatagory/@Catagory.Id'>Edit</a>  |
                                    <button class="btn btn-danger" @onclick="@(async () => await DeleteCatagory(Catagory.Id))"> Delete</button>

                                </td>
                            </tr>
                            i++;



                        }

                    </tbody>
                </table>


            }
        </div>
    </div>
</AuthorizeView>


@functions {

    int i = 1;
    string currentuserid = "";
    string currentuserrole = "";
    Estore.Shared.Models.AspNetUser[] UsersList;
    Estore.Shared.Models.Catagory[] CatagoriesList;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            UsersList = await Http.GetFromJsonAsync<Estore.Shared.Models.AspNetUser[]>
                ("api/admin/GetUserInfofromId");


            CatagoriesList = await Http.GetFromJsonAsync<Estore.Shared.Models.Catagory[]>
("/api/Catagories/Index");
            CurrentUser userdata = await authStateProvider.GetCurrentUser();
            currentuserid = userdata.Claims["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"].ToString();
            currentuserrole = userdata.Claims["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"].ToString();

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }
    protected async Task DeleteCatagory(int id)
    {
        await Http.DeleteAsync("api/Catagories/Delete/" + Convert.ToInt32(id));
        UriHelper.NavigateTo("/catagorylist", true);


    }

    public String getuserdata(string id)
    {
        try
        {
            AspNetUser singleuser = UsersList.FirstOrDefault(t => t.Id == id);
            return singleuser.NormalizedUserName;
        }
        catch
        {
            return "errr";
        }



    }

}
